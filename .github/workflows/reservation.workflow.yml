# Is triggered:
#   1. curl 
#   2. manuell 
name: Reservation

# Controls when the action will run. 
on:
  # Can be triggered with cURL
  repository_dispatch:
    types: [reservation]

  # Can be triggered manually
  workflow_dispatch:
    inputs:
      emailParam:
        description: 'Email - e.g.: "info@hopf-it.de"'
        required: true
        default: 'info@hopf-it.de'
      reservationDayParam:
        description: 'Reservation Day of the Week - e.g.: "Monday"'
        required: true
        default: 'Monday'
      reservationTimeParam:
        description: 'Reservation Time - e.g.: "17:00"'
        required: true
        default: '17:00'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run curl reservation
        run: |
          echo "Start Reservation ..."

          emailDefault='${{github.event.client_payload.email}}'

          emailInput="${{github.event.inputs.emailParam}}"

          emailVar=${emailInput:-$emailDefault}  


          reservationDayDefault='${{github.event.client_payload.reservationDay}}'

          reservationDayInput="${{github.event.inputs.reservationDayParam}}"

          reservationDayVar=${reservationDayInput:-$reservationDayDefault}  


          reservationTimeDefault='${{github.event.client_payload.reservationTime}}'

          reservationTimeInput="${{github.event.inputs.reservationTimeParam}}"

          reservationTimeVar=${reservationTimeInput:-$reservationTimeDefault}

      - name: Send result via email
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.ionos.de
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Reservation ${{github.event.client_payload.email}} ${{github.event.client_payload.reservationDay}} ${{github.event.client_payload.reservationDay}} Hopf-it.de
          # Read file contents as body:
          body: file://reservation-email.html
          to: ${{secrets.MAIL_ADRESS}}; ${{github.event.client_payload.email}} 
          from: Github hopf-it.de # <githubÃ„hopf-...de>
          # Optional content type (defaults to text/plain):
          content_type: text/html
          # Optional attachments:
          #attachments: out/_out.tar.gz
